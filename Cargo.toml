[package]
name = "lora_gps"
version = "0.1.1"
authors = ["Paul Gilbert <pdgilbert@users.noreply.github.com>"]
edition = "2018"
repository = "https://github.com/pdgilbert/LoRaGPS-rust"
#documentation = "https://"
readme = "README.md"

[lib]
# name = "whatever"  #lib name defaults to package name
# A flag for enabling unit tests for this target. This is used by `cargo test`.
test = true

[[bin]]
name = "send_spi"
path = "src/bin/send_spi.rs"

[[bin]]
name = "receive_spi"
path = "src/bin/receive_spi.rs"

[[bin]]
name = "send_gps"
path = "src/bin/send_gps.rs"
#test = false
#bench = false

#[[example]]
#name = "sendTestCHxx"
#path = "examples/endTestCHxx.rs"

[dependencies]
cortex-m            = { version = ">=0.7.1" }
nb                   = { version = ">=0.1.2" }
cortex-m-rt          = { version = "^0.7.0" }
panic-reset          = { version = ">=0.1.0" }
panic-halt           = { version = ">=0.2.0" }

ads1x1x =  { version = ">=0.2.1"}
ssd1306   = { version = ">=0.6.0"}
#ssd1306   = { git = "https://github.com/jamwaffles/ssd1306"  }  
embedded-graphics   = { version = ">=0.7.0" }                 
shared-bus = { version = ">=0.1.4", features = ["cortexm"] }

embedded-spi = { version = ">=0.6", default-features = false }

# for radio-sx127x which uses embedded-hal 1.0.0-alpha while device crates still use 0.2.x
embedded-hal = { version = "1.0.0-alpha.5" }  
old-e-h      = { version = "0.2.6", package = "embedded-hal" }

embedded-hal-compat = "0.4.0" 

#radio-sx127x  = {  git = "https://github.com/pdgilbert/rust-radio-sx127x", default-features = false }

#radio-sx127x  = { version = "0.11.0", default-features = false }
radio-sx127x  = {  git = "https://github.com/rust-iot/rust-radio-sx127x", default-features = false }
radio         = { version = "0.9.1" }
#radio         = {  git = "https://github.com/rust-iot/radio-hal", default-features = false }


#driver-pal   = { version = "0.8.0-alpha.3", default-features = false }
driver-pal   = { git = "https://github.com/ryankurte/rust-driver-pal/", default-features = false } # 0.8.0-alpha5

stm32f0xx-hal = { git = "https://github.com/stm32-rs/stm32f0xx-hal", optional = true }
stm32f1xx-hal = { git = "https://github.com/stm32-rs/stm32f1xx-hal", optional = true }
#stm32f3xx-hal = { git = "https://github.com/stm32-rs/stm32f3xx-hal", optional = true }
stm32f3xx-hal = { git = "https://github.com/Sh3Rm4n/stm32f3xx-hal", optional = true, branch = "pac-upgrade" }
stm32f4xx-hal = { git = "https://github.com/stm32-rs/stm32f4xx-hal", optional = true } #conflict using newer version of cortex-m-rt
stm32f7xx-hal = { git = "https://github.com/stm32-rs/stm32f7xx-hal", optional = true }
stm32h7xx-hal = { git = "https://github.com/stm32-rs/stm32h7xx-hal", optional = true }
#stm32l0xx-hal = { git = "https://github.com/stm32-rs/stm32l0xx-hal", optional = true }
#stm32l1xx-hal = { git = "https://github.com/stm32-rs/stm32l1xx-hal", optional = true, default-features = false}
stm32l1xx-hal = { git = "https://github.com/TheCallSign/stm32l1xx-hal", optional = true, default-features = false}
stm32l4xx-hal = { git = "https://github.com/stm32-rs/stm32l4xx-hal", optional = true }

# for bugs and unusual return values in some hals
void          = { version = ">=1.0.2", default-features = false }

heapless = ">=0.7"

cortex-m-semihosting = { version = ">=0.3.3" }
panic-semihosting    = { version = ">=0.5.2" }

#[dev-dependencies]

[features]
stm32f0xx = []
stm32f1xx = []
stm32f3xx = []
stm32f4xx = []
stm32f7xx = []
stm32h7xx = []
#stm32l0xx = []
stm32l1xx = []
stm32l4xx = []
#device-selected = []
#doc = []
stm32f030xc = ["stm32f0xx-hal/stm32f030xc", "stm32f0xx-hal/rt"]
stm32f042   = ["stm32f0xx-hal/stm32f042",   "stm32f0xx-hal/rt"]
stm32f100 = ["stm32f1xx-hal/stm32f100", "stm32f1xx-hal/rt"]
stm32f101 = ["stm32f1xx-hal/stm32f101", "stm32f1xx-hal/rt"]
stm32f103 = ["stm32f1xx-hal/stm32f103", "stm32f1xx-hal/rt"]
stm32f303xc = ["stm32f3xx-hal/stm32f303xc", "stm32f3xx-hal/rt"] 
stm32f401 = ["stm32f4xx-hal/stm32f401", "stm32f4xx-hal/rt"] 
stm32f405 = ["stm32f4xx-hal/stm32f405", "stm32f4xx-hal/rt"] 
stm32f411 = ["stm32f4xx-hal/stm32f411", "stm32f4xx-hal/rt"] 
stm32f722 = ["stm32f7xx-hal/stm32f722", "stm32f7xx-hal/rt"] 
stm32h742 = ["stm32h7xx-hal/stm32h742", "stm32h7xx-hal/rt"]
# see https://www.st.com/resource/en/datasheet/stm32l072v8.pdf  p12 for some MCU variants
#stm32l0x2 = ["stm32l0xx-hal/stm32l0x2", "stm32l0xx-hal/rt", "stm32l0xx-hal/mcu-STM32L072KZTx"]
#stm32l0x1 = ["stm32l0xx-hal/stm32l0x1", "stm32l0xx-hal/rt", "stm32l0xx-hal/mcu-STM32L071KBTx"]
stm32l100 = ["stm32l1xx-hal/stm32l100", "stm32l1xx-hal/rt"]
stm32l151 = ["stm32l1xx-hal/stm32l151", "stm32l1xx-hal/rt"]
stm32l4x1 = ["stm32l4xx-hal/stm32l4x1", "stm32l4xx-hal/rt"]
stm32l4x2 = ["stm32l4xx-hal/stm32l4x2", "stm32l4xx-hal/rt"]

[profile.dev]
incremental = false
codegen-units = 1
debug = true

[profile.release]
codegen-units = 1
debug = false
lto = true

