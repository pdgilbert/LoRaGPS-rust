name: LoRaGPS-rust

on:
  push:
    branches: [ master, add-monitor ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all  -- --check

  test_bin:
    name: bin
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        brd: [none-stm32f030,      none-stm32f042,      none-stm32f101,      bluepill,
              discovery-stm32f303, blackpill-stm32f401, blackpill-stm32f411, none-stm32f722,
              none-stm32h742,      none-stm32l0x2,      discovery-stm32l100, heltec-lora-node151, 
              none-stm32l4x2 ]
        #none-stm32f100
        #mcu: [stm32f030xc, stm32f100, stm32f101, stm32f103, stm32f303xc, stm32f401, stm32f411, stm32f722,
        #      stm32h742, stm32l0x2, stm32l100, stm32l151, stm32l4x2, ]
        
        #bin:  [ send_spi, receive_spi, send_gps ]
        # bins are all built because they are in the Cargo.toml.
        
        include:
           - brd: "none-stm32f030"
             mcu:  stm32f030xc
             hal: "stm32f0xx"
             trg: "thumbv6m-none-eabi"   
           - brd: "none-stm32f042"
             mcu:  stm32f042
             hal: "stm32f0xx"
             trg: "thumbv6m-none-eabi"   
           - brd: "none-stm32f101"
             mcu:  stm32f101
             hal: "stm32f1xx"
             trg: "thumbv7m-none-eabi"
           - brd: "bluepill"
             mcu:  stm32f103
             hal: "stm32f1xx"
             trg: "thumbv7m-none-eabi"
           - brd: "discovery-stm32f303"
             mcu:  stm32f303xc
             hal: "stm32f3xx"
             trg: "thumbv7em-none-eabihf"
           - brd: "blackpill-stm32f401"
             mcu:  stm32f401
             hal: "stm32f4xx"
             trg: "thumbv7em-none-eabihf"
           - brd: "blackpill-stm32f411"
             mcu:  stm32f411
             hal: "stm32f4xx"
             trg: "thumbv7em-none-eabihf"
           - brd: "none-stm32f722"
             mcu:  stm32f722
             hal: "stm32f7xx"
             trg: "thumbv7em-none-eabihf"
           - brd: "none-stm32h742"
             mcu:  stm32h742             
             hal: "stm32h7xx"
             trg: "thumbv7em-none-eabihf"
           - brd: "none-stm32l0x2"
             mcu:  stm32l0x2
             hal: "stm32l0xx"
             trg: "thumbv6m-none-eabi"
           - brd: "discovery-stm32l100"
             mcu:  stm32l100
             hal: "stm32l1xx"
             trg: "thumbv7m-none-eabi"
           - brd: "heltec-lora-node151"
             mcu:  stm32l151
             hal: "stm32l1xx"
             trg: "thumbv7m-none-eabi"
           - brd: "none-stm32l4x2"
             mcu:  stm32l4x2
             hal: "stm32l4xx"
             trg: "thumbv7em-none-eabi"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: tree
        uses: actions-rs/cargo@v1 
        with:
          command: tree

      - name: tree e-h 0.2.5
        uses: actions-rs/cargo@v1 
        with:
          command: tree
          args:  -i -p embedded-hal:0.2.5

      - name: tree e-h 1.0.0-alpha.4
        uses: actions-rs/cargo@v1 
        with:
          command: tree
          args:  -i -p embedded-hal:1.0.0-alpha.4

      - name: Build
        uses: actions-rs/cargo@v1 
        with:
          command: build
          args:  --release --target ${{ matrix.trg }} --features ${{ matrix.hal }},${{ matrix.mcu }}
          use-cross: true

      #- name: Build bin 
      #  uses: actions-rs/cargo@v1
      #  with:
      #    command: build
      #    args:  --release --target ${{ matrix.trg }} --features ${{ matrix.hal }},${{ matrix.mcu }} --bin ${{ matrix.bin }}
      #    use-cross: true

